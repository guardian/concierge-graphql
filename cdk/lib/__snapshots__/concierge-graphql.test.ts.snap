// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ConciergeGraphql stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuParameter",
      "GuParameter",
      "GuPolicy",
      "GuPlayApp",
      "GuCertificate",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuSecurityGroup",
      "GuSecurityGroup",
      "GuSecurityGroup",
      "GuStringParameter",
      "GuStringParameter",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "ExplorerDistroUrlOut91AD6AD6": {
      "Value": {
        "Fn::GetAtt": [
          "GraphiQLDistroDDB6F81C",
          "DomainName",
        ],
      },
    },
    "LoadBalancerConciergegraphqlDnsName": {
      "Description": "DNS entry for LoadBalancerConciergegraphql",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerConciergegraphql238A0C8B",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIConciergegraphql": {
      "Description": "Amazon Machine Image ID for the app concierge-graphql. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "ExplorerCertArn": {
      "Default": "/TEST/content-api/graphiql-explorer/GlobalCertArn",
      "Description": "Cert to use for graphiql TEST. This must reside in us-east-1",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/services/capi.gutools/TEST/hostedzoneid",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "StaticBucketName": {
      "Default": "/account/services/static.serving.bucket",
      "Description": "SSM parameter giving the name of a bucket which is to be used for static hosting",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "subnets": {
      "Default": "/account/vpc/PROD-live/subnets",
      "Description": "Subnets to deploy into",
      "Type": "AWS::SSM::Parameter::Value<List<String>>",
    },
    "vpcId": {
      "Default": "/account/vpc/PROD-live/id",
      "Description": "VPC to deploy into",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AuthTable0711E62F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "ApiKey",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "ApiKey",
            "KeyType": "HASH",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "AuthTableParam9777C3B3": {
      "Properties": {
        "Name": "/TEST/content-api/concierge-graphql/aws/auth_table",
        "Tags": {
          "Stack": "content-api",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/concierge-graphql",
        },
        "Type": "String",
        "Value": {
          "Ref": "AuthTable0711E62F",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthTablePolicy5F6B0D1E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AuthTable0711E62F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthTablePolicy5F6B0D1E",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutoScalingGroupConciergegraphqlASG7A20D011": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "contentapiTESTconciergegraphqlAFB69E52",
          },
          "Version": {
            "Fn::GetAtt": [
              "contentapiTESTconciergegraphqlAFB69E52",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "4",
        "MinSize": "2",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "concierge-graphql.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupConciergegraphql5983EEF4",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "subnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "CertificateConciergegraphqlC301CD47": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "graphql-preview.internal.content.code.dev-guardianapis.com",
        "DomainValidationOptions": [
          {
            "DomainName": "graphql-preview.internal.content.code.dev-guardianapis.com",
            "HostedZoneId": {
              "Ref": "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Name",
            "Value": "ConciergeGraphql/CertificateConciergegraphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GWApiGW36D3A369": {
      "Properties": {
        "CorsConfiguration": {
          "AllowCredentials": true,
          "AllowHeaders": [
            "content-type",
            "x-api-key",
          ],
          "AllowMethods": [
            "POST",
            "GET",
            "OPTIONS",
          ],
          "AllowOrigins": [
            "http://localhost:8081",
            "https://graphiql.capi.test.dev-gutools.co.uk",
          ],
          "MaxAge": 300,
        },
        "Description": "Gateway for the TEST concierge-graphql instance",
        "Name": "concierge-graphql-TEST",
        "ProtocolType": "HTTP",
        "Tags": {
          "Stack": "content-api",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/concierge-graphql",
        },
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "GWApiGWDefaultRoute7E891A48": {
      "Properties": {
        "ApiId": {
          "Ref": "GWApiGW36D3A369",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "GWApiGWDefaultRouteDefaultIntegration60DE663E",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "GWApiGWDefaultRouteDefaultIntegration60DE663E": {
      "Properties": {
        "ApiId": {
          "Ref": "GWApiGW36D3A369",
        },
        "ConnectionId": {
          "Ref": "GWApiGWVPC54C274C5",
        },
        "ConnectionType": "VPC_LINK",
        "IntegrationMethod": "ANY",
        "IntegrationType": "HTTP_PROXY",
        "IntegrationUri": {
          "Ref": "ListenerConciergegraphqlA8836197",
        },
        "PayloadFormatVersion": "1.0",
        "TlsConfig": {
          "ServerNameToVerify": "graphql-preview.internal.content.code.dev-guardianapis.com",
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "GWApiGWDefaultStage62BBA833": {
      "Properties": {
        "ApiId": {
          "Ref": "GWApiGW36D3A369",
        },
        "AutoDeploy": true,
        "StageName": "$default",
        "Tags": {
          "Stack": "content-api",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/concierge-graphql",
        },
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "GWApiGWVPC54C274C5": {
      "Properties": {
        "Name": "VpcLink-concierge-graphql-TEST",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcLinkSGConciergegraphqlDF39722B",
              "GroupId",
            ],
          },
        ],
        "SubnetIds": {
          "Ref": "subnets",
        },
        "Tags": {
          "Stack": "content-api",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/concierge-graphql",
        },
      },
      "Type": "AWS::ApiGatewayV2::VpcLink",
    },
    "GetDistributablePolicyConciergegraphql510C52ED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/content-api/TEST/concierge-graphql/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyConciergegraphql510C52ED",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GraphiQLDistroDDB6F81C": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "graphiql.capi.test.dev-gutools.co.uk",
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "ConciergeGraphqlGraphiQLDistroOrigin1368BF828",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "StaticBucketName",
                    },
                    ".s3.",
                    {
                      "Ref": "AWS::Region",
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix",
                    },
                  ],
                ],
              },
              "Id": "ConciergeGraphqlGraphiQLDistroOrigin1368BF828",
              "OriginPath": "/TEST/graphiql-explorer",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "GraphiQLDistroOrigin1S3OriginE0C3987C",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "ExplorerCertArn",
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "GraphiQLDistroOrigin1S3OriginE0C3987C": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for ConciergeGraphqlGraphiQLDistroOrigin1368BF828",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "GuHttpsEgressSecurityGroupConciergegraphql1855BF47": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Allow outgoing connections to Elasticsearch",
            "FromPort": 9200,
            "IpProtocol": "tcp",
            "ToPort": 9200,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupConciergegraphqlfromConciergeGraphqlInternalIngressSecurityGroupConciergegraphql80B7A2289000891229EB": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupConciergegraphqlA6B6FA94",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupConciergegraphqlfromConciergeGraphqlLinkageSGConciergegraphqlB4BBACD5900025BE65A9": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LinkageSGConciergegraphql642E0A21",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupConciergegraphqlfromConciergeGraphqlLoadBalancerConciergegraphqlSecurityGroup9A9241C7900098F0B65A": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerConciergegraphqlSecurityGroup29AA273A",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleConciergegraphql96280BE9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InternalIngressSecurityGroupConciergegraphqlA6B6FA94": {
      "Properties": {
        "GroupDescription": "Allow restricted ingress from CIDR ranges",
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Allow access on port 443 from 10.0.0.0/8",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalIngressSecurityGroupConciergegraphqltoConciergeGraphqlGuHttpsEgressSecurityGroupConciergegraphqlB7AB0DFB9000AEC90D77": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupConciergegraphqlA6B6FA94",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "InternalIngressSecurityGroupConciergegraphqltoConciergeGraphqlWazuhSecurityGroup1681144A9000E575B1DE": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupConciergegraphqlA6B6FA94",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LinkageSGConciergegraphql642E0A21": {
      "Properties": {
        "GroupDescription": "ConciergeGraphql/LinkageSGConciergegraphql",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ListenerConciergegraphqlA8836197": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateConciergegraphqlC301CD47",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupConciergegraphql5983EEF4",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerConciergegraphql238A0C8B",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerConciergegraphql238A0C8B": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerConciergegraphqlSecurityGroup29AA273A",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "InternalIngressSecurityGroupConciergegraphqlA6B6FA94",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "LinkageSGConciergegraphql642E0A21",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "subnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerConciergegraphqlSecurityGroup29AA273A": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ConciergeGraphqlLoadBalancerConciergegraphqlFE9C9F45",
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerConciergegraphqlSecurityGrouptoConciergeGraphqlGuHttpsEgressSecurityGroupConciergegraphqlB7AB0DFB900002F8FAEC": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerConciergegraphqlSecurityGroup29AA273A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerConciergegraphqlSecurityGrouptoConciergeGraphqlWazuhSecurityGroup1681144A9000A11DD6C7": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerConciergegraphqlSecurityGroup29AA273A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadConciergegraphql80596F94": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/concierge-graphql",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/concierge-graphql/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SsmSshPolicy4CFC977E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupConciergegraphql5983EEF4": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "VpcLinkSGConciergegraphqlDF39722B": {
      "Properties": {
        "GroupDescription": "ConciergeGraphql/VpcLinkSGConciergegraphql",
        "SecurityGroupEgress": [
          {
            "Description": "Access to incoming security group of the backend loadbalancer",
            "DestinationSecurityGroupId": {
              "Fn::GetAtt": [
                "LinkageSGConciergegraphql642E0A21",
                "GroupId",
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "concierge-graphql",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Allow outgoing connections to Elasticsearch",
            "FromPort": 9200,
            "IpProtocol": "tcp",
            "ToPort": 9200,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/concierge-graphql",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "vpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfromConciergeGraphqlInternalIngressSecurityGroupConciergegraphql80B7A2289000F731FB89": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupConciergegraphqlA6B6FA94",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "WazuhSecurityGroupfromConciergeGraphqlLinkageSGConciergegraphqlB4BBACD590001E26A8A8": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LinkageSGConciergegraphql642E0A21",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "WazuhSecurityGroupfromConciergeGraphqlLoadBalancerConciergegraphqlSecurityGroup9A9241C79000A2D85BDF": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerConciergegraphqlSecurityGroup29AA273A",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "contentapiTESTconciergegraphqlAFB69E52": {
      "DependsOn": [
        "InstanceRoleConciergegraphql96280BE9",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "contentapiTESTconciergegraphqlProfile5BE3C7C2",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIConciergegraphql",
          },
          "InstanceType": "t4g.large",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupConciergegraphql1855BF47",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "concierge-graphql",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/concierge-graphql",
                },
                {
                  "Key": "Name",
                  "Value": "ConciergeGraphql/content-api-TEST-concierge-graphql",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "concierge-graphql",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/concierge-graphql",
                },
                {
                  "Key": "Name",
                  "Value": "ConciergeGraphql/content-api-TEST-concierge-graphql",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
mkdir -p $(dirname '/concierge-graphql/concierge-graphql_0.1.0_all.deb')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/content-api/TEST/concierge-graphql/concierge-graphql_0.1.0_all.deb' '/concierge-graphql/concierge-graphql_0.1.0_all.deb'
dpkg -i concierge-graphql/concierge-graphql_0.1.0_all.deb",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "concierge-graphql",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/concierge-graphql",
              },
              {
                "Key": "Name",
                "Value": "ConciergeGraphql/content-api-TEST-concierge-graphql",
              },
              {
                "Key": "Stack",
                "Value": "content-api",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "contentapiTESTconciergegraphqlProfile5BE3C7C2": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleConciergegraphql96280BE9",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
